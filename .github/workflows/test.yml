name: Test
on: [pull_request]

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ["ubuntu-latest", "windows-latest"]
    steps:
      - name: Get sources
        uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Locate yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Restore yarn cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install

      - name: Build
        run: yarn run build

      - name: Test
        run: yarn test

      - name: Report coverage (Non-Windows)
        if: matrix.os == 'ubuntu-latest'
        uses: codecov/codecov-action@master
        with:
          token: ${{secrets.CODECOV_TOKEN}}
